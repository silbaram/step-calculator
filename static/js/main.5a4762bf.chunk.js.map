{"version":3,"sources":["button/NumberButton.js","button/EquationButton.js","button/CalculatorButton.js","container/ButtonContainer.js","text/CalculatorTextField.js","container/CalculatorContainer.js","App.js","reportWebVitals.js","index.js"],"names":["NumberButton","bindOffer","buttonDisplayName","setNumber","_this","props","_this2","this","react_default","a","createElement","Button","variant","color","colorCode","size","onClick","Component","EquationButton","setEquation","style","backgroundColor","CalculatorButton","setCalculate","ButtonContaier","choiceEquation","undefined","equation","setPresentCalculationEquation","number","setPresentCalculationNumber","calculate","buttonColor","Container","maxWidth","Box","sx","display","gridTemplateColumns","gap","margin","button_CalculatorButton","button_EquationButton","button_NumberButton","CalculatorTextField","TextField","fullWidth","id","value","displayNumber","CalculatorContaier","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","LEFT_INPUT_NUMBER_POSITION","RIGHT_INPUT_NUMBER_POSITION","numberInputPositon","state","presentCalculationFormula","setState","objectSpread","leftNumber","concat","join","rightNumber","calculatorHistory","calculateResult","Fragment","text_CalculatorTextField","ButtonContainer","App","CalculatorContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","console","log"],"mappings":"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","file":"static/js/main.5a4762bf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from '@mui/material/Button';\n\nclass NumberButton extends Component {\n\n    bindOffer = (buttonDisplayName) => {\n        const { setNumber } = this.props\n        setNumber(buttonDisplayName)\n    }\n\n    render() {\n        return (\n            <Button\n                variant=\"contained\"\n                color={this.props.colorCode}\n                size=\"small\"\n                onClick={ () => this.bindOffer(this.props.buttonDisplayName) }\n            >\n                {this.props.buttonDisplayName}\n            </Button>\n        )   \n    }\n}\n\nexport default NumberButton","import React, { Component } from \"react\";\nimport Button from '@mui/material/Button';\n\nclass EquationButton extends Component {\n\n    bindOffer = (buttonDisplayName) => {\n        const { setEquation } = this.props\n        setEquation(buttonDisplayName)\n    }\n\n    render() {\n        return (\n            <Button\n                style={{\n                    backgroundColor: this.props.colorCode,\n                }}\n                variant=\"contained\"\n                size=\"small\"\n                onClick={ () => this.bindOffer(this.props.buttonDisplayName) }\n            >\n                {this.props.buttonDisplayName}\n            </Button>\n        )   \n    }\n}\n\nexport default EquationButton","import React, { Component } from \"react\";\nimport Button from '@mui/material/Button';\n\nclass CalculatorButton extends Component {\n\n    setCalculate = () => {\n        const { setCalculate } = this.props\n        setCalculate()\n    }\n\n    render() {\n        return (\n            <Button\n                variant=\"contained\"\n                color={this.props.colorCode}\n                size=\"small\"\n                onClick={ () => this.setCalculate() }\n            >\n                {this.props.buttonDisplayName}\n            </Button>\n        )   \n    }\n}\n\nexport default CalculatorButton;","import React, { Component } from \"react\";\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport NumberButton from \"../button/NumberButton\"\nimport EquationButton from \"../button/EquationButton\"\nimport CalculatorButton from \"../button/CalculatorButton\"\n\nclass ButtonContaier extends Component {\n\n    choiceEquation = undefined\n    setEquation = equation => {\n        const { setPresentCalculationEquation } = this.props\n        let inputNumberPostion = setPresentCalculationEquation(equation)\n\n        if (inputNumberPostion === 'RIGHT') {\n            this.choiceEquation = equation\n        }\n    }\n\n    setNumber = number => {\n        const { setPresentCalculationNumber } = this.props\n        setPresentCalculationNumber(number)\n    }\n\n    setCalculate = () => {\n        const { calculate } = this.props\n        calculate()\n    }\n\n\n    buttonColor = (equation) => {\n        if (this.choiceEquation === equation) {\n            return \"#21b6ae\"    \n        }\n        return \"#2e7d32\"\n    }\n\n    render() {\n        return (\n            <Container maxWidth=\"sm\">\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <CalculatorButton buttonDisplayName=\"AC\" colorCode=\"success\" />\n                    <EquationButton buttonDisplayName=\"%\" colorCode={ this.buttonColor(\"%\") } setEquation={this.setEquation} />\n                    <EquationButton buttonDisplayName=\"/\" colorCode={ this.buttonColor(\"/\") } setEquation={this.setEquation} />\n                    <CalculatorButton buttonDisplayName=\"Del\" colorCode=\"success\" />\n                </Box>\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <NumberButton buttonDisplayName=\"7\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"8\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"9\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <EquationButton buttonDisplayName=\"*\" colorCode={ this.buttonColor(\"*\") } setEquation={this.setEquation} />\n                </Box>\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <NumberButton buttonDisplayName=\"4\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"5\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"6\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <EquationButton buttonDisplayName=\"-\" colorCode={ this.buttonColor(\"-\") } setEquation={this.setEquation} />\n                </Box>\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <NumberButton buttonDisplayName=\"1\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"2\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"3\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <EquationButton buttonDisplayName=\"+\" colorCode={ this.buttonColor(\"+\") } setEquation={this.setEquation} />\n                </Box>\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <CalculatorButton buttonDisplayName=\"+/-\" colorCode=\"success\" />\n                    <NumberButton buttonDisplayName=\"0\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <CalculatorButton buttonDisplayName=\".\" colorCode=\"success\" />\n                    <CalculatorButton buttonDisplayName=\"=\" colorCode=\"success\" setCalculate={this.setCalculate} />\n                </Box>\n            </Container>\n        )\n    }\n}\n\nexport default ButtonContaier","import React, { Component } from \"react\";\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\n\nclass CalculatorTextField extends Component {\n\n    render() {\n        return (\n            <Container maxWidth=\"sm\">\n                <TextField \n                    fullWidth\n                    color=\"info\"\n                    id=\"calculatorText\"\n                    value={this.props.displayNumber}\n                />\n            </Container>\n        )\n    }\n}\n\nexport default CalculatorTextField;","import React, { Component } from \"react\";\nimport ButtonContaier from \"./ButtonContainer\";\nimport CalculatorTextField from '../text/CalculatorTextField';\n\nclass CalculatorContaier extends Component {\n\n    LEFT_INPUT_NUMBER_POSITION = \"LEFT\"\n    RIGHT_INPUT_NUMBER_POSITION = \"RIGHT\"\n    numberInputPositon = ''\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            calculatorHistory: [],\n            presentCalculationFormula: {\n                equation: null,\n                leftNumber: [],\n                rightNumber: [],\n                calculateResult: 0\n            },\n            displayNumber: 0\n        }\n    }\n\n    setEquation = equation => {\n        if (this.numberInputPositon === this.LEFT_INPUT_NUMBER_POSITION || this.state.presentCalculationFormula.equation !== null) {\n            this.setState({\n                presentCalculationFormula: {\n                    ...this.state.presentCalculationFormula,\n                    equation: equation\n                }\n            })\n\n            return this.RIGHT_INPUT_NUMBER_POSITION\n        }\n    }\n\n    setNumber = number => {\n        if (this.state.presentCalculationFormula.equation === null) {\n            this.setState({\n                presentCalculationFormula: {\n                    ...this.state.presentCalculationFormula,\n                    leftNumber: this.state.presentCalculationFormula.leftNumber.concat(number)\n                }\n            },\n            function() {\n                this.setState({\n                    displayNumber: this.state.presentCalculationFormula.leftNumber.join('')\n                })\n\n                this.numberInputPositon = this.LEFT_INPUT_NUMBER_POSITION\n            })\n        } else {\n            this.setState({\n                presentCalculationFormula: {\n                    ...this.state.presentCalculationFormula,\n                    rightNumber: this.state.presentCalculationFormula.rightNumber.concat(number)\n                },\n                displayNumber: this.state.presentCalculationFormula.rightNumber.join('')\n            },\n            function() {\n                this.setState({\n                    displayNumber: this.state.presentCalculationFormula.rightNumber.join('')\n                })\n\n                this.numberInputPositon = this.RIGHT_INPUT_NUMBER_POSITION\n            })\n        }\n    }\n\n    calculate = () => {\n        if (this.state.presentCalculationFormula.equation === \"/\") {\n            this.setState({\n                displayNumber: this.state.presentCalculationFormula.leftNumber / this.state.presentCalculationFormula.rightNumber\n            })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <CalculatorTextField displayNumber={this.state.displayNumber} />\n                <ButtonContaier setPresentCalculationEquation={this.setEquation} setPresentCalculationNumber={this.setNumber} calculate={this.calculate} />\n            </>\n        )\n    }\n}\n\nexport default CalculatorContaier","import React from 'react'\nimport CalculatorContainer from './container/CalculatorContainer'\n\nfunction App() {\n\n  return (\n    <div>\n      <CalculatorContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}