{"version":3,"sources":["button/NumberButton.js","button/EquationButton.js","button/CalculatorButton.js","button/InitializationButton.js","container/ButtonContainer.js","text/CalculatorTextField.js","container/CalculatorContainer.js","App.js","reportWebVitals.js","index.js"],"names":["NumberButton","bindOffer","buttonDisplayName","setNumber","_this","props","_this2","this","react_default","a","createElement","Button","variant","color","colorCode","size","onClick","Component","EquationButton","setEquation","style","backgroundColor","CalculatorButton","setCalculate","setValueInitialization","ButtonContaier","choiceEquation","undefined","equation","setPresentCalculationEquation","resetEquationButtonColor","number","setPresentCalculationNumber","calculate","setButtonColor","valueInitialization","Container","maxWidth","Box","sx","display","gridTemplateColumns","gap","margin","InitializationButton","button_EquationButton","button_CalculatorButton","button_NumberButton","CalculatorTextField","TextField","fullWidth","id","value","displayNumber","CalculatorContaier","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","LEFT_INPUT_NUMBER_POSITION","RIGHT_INPUT_NUMBER_POSITION","numberInputPositon","state","presentCalculationFormula","setState","objectSpread","leftNumber","concat","join","rightNumber","length","isCalculate","Number","processingAfterCalculation","replace","console","log","calculatorHistory","calculateResult","Fragment","text_CalculatorTextField","ButtonContainer","App","CalculatorContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9d8e6fc3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from '@mui/material/Button';\n\nclass NumberButton extends Component {\n\n    bindOffer = (buttonDisplayName) => {\n        const { setNumber } = this.props\n        setNumber(buttonDisplayName)\n    }\n\n    render() {\n        return (\n            <Button\n                variant=\"contained\"\n                color={this.props.colorCode}\n                size=\"small\"\n                onClick={ () => this.bindOffer(this.props.buttonDisplayName) }\n            >\n                {this.props.buttonDisplayName}\n            </Button>\n        )   \n    }\n}\n\nexport default NumberButton","import React, { Component } from \"react\";\nimport Button from '@mui/material/Button';\n\nclass EquationButton extends Component {\n\n    bindOffer = (buttonDisplayName) => {\n        const { setEquation } = this.props\n        setEquation(buttonDisplayName)\n    }\n\n    render() {\n        return (\n            <Button\n                style={{\n                    backgroundColor: this.props.colorCode,\n                }}\n                variant=\"contained\"\n                size=\"small\"\n                onClick={ () => this.bindOffer(this.props.buttonDisplayName) }\n            >\n                {this.props.buttonDisplayName}\n            </Button>\n        )   \n    }\n}\n\nexport default EquationButton","import React, { Component } from \"react\";\nimport Button from '@mui/material/Button';\n\nclass CalculatorButton extends Component {\n\n    setCalculate = () => {\n        const { setCalculate } = this.props\n        setCalculate()\n    }\n\n    render() {\n        return (\n            <Button\n                variant=\"contained\"\n                color={this.props.colorCode}\n                size=\"small\"\n                onClick={ () => this.setCalculate() }\n            >\n                {this.props.buttonDisplayName}\n            </Button>\n        )   \n    }\n}\n\nexport default CalculatorButton;","import React, { Component } from \"react\";\nimport Button from '@mui/material/Button';\n\nclass CalculatorButton extends Component {\n\n    setCalculate = () => {\n        const { setValueInitialization } = this.props\n        setValueInitialization()\n    }\n\n    render() {\n        return (\n            <Button\n                variant=\"contained\"\n                color={this.props.colorCode}\n                size=\"small\"\n                onClick={ () => this.setCalculate() }\n            >\n                {this.props.buttonDisplayName}\n            </Button>\n        )   \n    }\n}\n\nexport default CalculatorButton;","import React, { Component } from \"react\";\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport NumberButton from \"../button/NumberButton\"\nimport EquationButton from \"../button/EquationButton\"\nimport CalculatorButton from \"../button/CalculatorButton\"\nimport Initialization from \"../button/InitializationButton\"\n\nclass ButtonContaier extends Component {\n\n    choiceEquation = undefined\n    setEquation = equation => {\n        const { setPresentCalculationEquation } = this.props\n        let inputNumberPostion = setPresentCalculationEquation(equation)\n\n        if (inputNumberPostion === 'RIGHT') {\n            this.choiceEquation = equation\n        }\n    }\n\n    resetEquationButtonColor = () => {\n        this.choiceEquation = undefined\n    }\n\n    setNumber = number => {\n        const { setPresentCalculationNumber } = this.props\n        setPresentCalculationNumber(number)\n    }\n\n    setCalculate = () => {\n        const { calculate } = this.props\n        if (calculate()) {\n            this.resetEquationButtonColor()\n        }\n    }\n\n    setButtonColor = (equation) => {\n        if (this.choiceEquation === equation) {\n            return \"#21b6ae\"    \n        }\n        return \"#2e7d32\"\n    }\n\n    setValueInitialization = () => {\n        const { valueInitialization } = this.props\n        valueInitialization()\n    }\n\n    render() {\n        return (\n            <Container maxWidth=\"sm\">\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <Initialization buttonDisplayName=\"AC\" colorCode=\"success\" setValueInitialization={this.setValueInitialization} />\n                    <EquationButton buttonDisplayName=\"%\" colorCode={ this.setButtonColor(\"%\") } setEquation={this.setEquation} />\n                    <EquationButton buttonDisplayName=\"/\" colorCode={ this.setButtonColor(\"/\") } setEquation={this.setEquation} />\n                    <CalculatorButton buttonDisplayName=\"Del\" colorCode=\"success\" />\n                </Box>\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <NumberButton buttonDisplayName=\"7\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"8\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"9\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <EquationButton buttonDisplayName=\"*\" colorCode={ this.setButtonColor(\"*\") } setEquation={this.setEquation} />\n                </Box>\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <NumberButton buttonDisplayName=\"4\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"5\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"6\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <EquationButton buttonDisplayName=\"-\" colorCode={ this.setButtonColor(\"-\") } setEquation={this.setEquation} />\n                </Box>\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <NumberButton buttonDisplayName=\"1\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"2\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <NumberButton buttonDisplayName=\"3\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <EquationButton buttonDisplayName=\"+\" colorCode={ this.setButtonColor(\"+\") } setEquation={this.setEquation} />\n                </Box>\n                <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 2, margin: 1 }}>\n                    <CalculatorButton buttonDisplayName=\"+/-\" colorCode=\"success\" />\n                    <NumberButton buttonDisplayName=\"0\" colorCode=\"success\" setNumber={this.setNumber} />\n                    <CalculatorButton buttonDisplayName=\".\" colorCode=\"success\" />\n                    <CalculatorButton buttonDisplayName=\"=\" colorCode=\"success\" setCalculate={this.setCalculate} />\n                </Box>\n            </Container>\n        )\n    }\n}\n\nexport default ButtonContaier","import React, { Component } from \"react\";\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\n\nclass CalculatorTextField extends Component {\n\n    render() {\n        return (\n            <Container maxWidth=\"sm\">\n                <TextField \n                    fullWidth\n                    color=\"info\"\n                    id=\"calculatorText\"\n                    value={this.props.displayNumber}\n                />\n            </Container>\n        )\n    }\n}\n\nexport default CalculatorTextField;","import React, { Component } from \"react\";\nimport ButtonContaier from \"./ButtonContainer\";\nimport CalculatorTextField from '../text/CalculatorTextField';\n\nclass CalculatorContaier extends Component {\n\n    LEFT_INPUT_NUMBER_POSITION = \"LEFT\"\n    RIGHT_INPUT_NUMBER_POSITION = \"RIGHT\"\n    numberInputPositon = ''\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            calculatorHistory: [],\n            presentCalculationFormula: {\n                equation: null,\n                leftNumber: [],\n                rightNumber: [],\n                calculateResult: 0\n            },\n            displayNumber: 0\n        }\n    }\n\n    setEquation = equation => {\n        if (this.numberInputPositon === this.LEFT_INPUT_NUMBER_POSITION || this.state.presentCalculationFormula.equation !== null) {\n            this.setState({\n                presentCalculationFormula: {\n                    ...this.state.presentCalculationFormula,\n                    equation: equation\n                }\n            })\n\n            return this.RIGHT_INPUT_NUMBER_POSITION\n        }\n    }\n\n    setNumber = number => {\n        if (this.state.presentCalculationFormula.equation === null) {\n            this.setState({\n                presentCalculationFormula: {\n                    ...this.state.presentCalculationFormula,\n                    leftNumber: this.state.presentCalculationFormula.leftNumber.concat(number)\n                }\n            },\n            function() {\n                this.setState({\n                    displayNumber: this.state.presentCalculationFormula.leftNumber.join('')\n                })\n\n                this.numberInputPositon = this.LEFT_INPUT_NUMBER_POSITION\n            })\n        } else {\n            this.setState({\n                presentCalculationFormula: {\n                    ...this.state.presentCalculationFormula,\n                    rightNumber: this.state.presentCalculationFormula.rightNumber.concat(number)\n                },\n                displayNumber: this.state.presentCalculationFormula.rightNumber.join('')\n            },\n            function() {\n                this.setState({\n                    displayNumber: this.state.presentCalculationFormula.rightNumber.join('')\n                })\n\n                this.numberInputPositon = this.RIGHT_INPUT_NUMBER_POSITION\n            })\n        }\n    }\n\n    calculate = () => {\n        if (this.state.presentCalculationFormula.leftNumber.length === 0 || this.state.presentCalculationFormula.rightNumber.length === 0) {\n            return\n        }\n\n        let isCalculate = false\n        if (this.state.presentCalculationFormula.equation === \"/\") {\n            isCalculate = true\n            this.setState({\n                displayNumber: Number(this.state.presentCalculationFormula.leftNumber.join('')) / Number(this.state.presentCalculationFormula.rightNumber.join('')),\n            })\n        }\n\n        if (isCalculate) {\n            this.processingAfterCalculation()\n        }\n\n        return isCalculate\n    }\n\n    processingAfterCalculation = () => {\n        this.numberInputPositon = this.RIGHT_INPUT_NUMBER_POSITION\n        this.setState({\n            presentCalculationFormula: {\n                ...this.state.presentCalculationFormula,\n                leftNumber: this.state.displayNumber.replace(\"\"),\n                equation: null\n            }\n        }, \n        function() {\n            console.log(\"this.state\", this.state)\n        })\n    }\n\n    valueInitialization = () => {\n        this.numberInputPositon = this.RIGHT_INPUT_NUMBER_POSITION\n        this.setState({\n            calculatorHistory: [],\n            presentCalculationFormula: {\n                equation: null,\n                leftNumber: [],\n                rightNumber: [],\n                calculateResult: 0\n            },\n            displayNumber: 0\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <CalculatorTextField displayNumber={this.state.displayNumber} />\n                <ButtonContaier\n                    setPresentCalculationEquation={this.setEquation}\n                    setPresentCalculationNumber={this.setNumber}\n                    calculate={this.calculate}\n                    valueInitialization={this.valueInitialization}\n                />\n            </>\n        )\n    }\n}\n\nexport default CalculatorContaier","import React from 'react'\nimport CalculatorContainer from './container/CalculatorContainer'\n\nfunction App() {\n\n  return (\n    <div>\n      <CalculatorContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}